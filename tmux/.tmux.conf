set -g mouse on
# set-option -g default-shell /usr/bin/zsh

# setw -g mode-keys vi
set-window-option -g mode-keys vi
set -g base-index 1
set -g renumber-windows on
# set -g default-style "fg=#{default}"

set -g history-limit 1000000    # increase history size (from 2,000)
set -g detach-on-destroy off    # don't exit from tmux when closing a session
set -g status-interval 3        # update the status bar every 3 seconds
set -g escape-time 0            # remove delay for exiting insert mode with ESC in Neovim
set -g set-titles on
set -g set-titles-string '#{pane_current_command} #{window_name}'
set -g automatic-rename on
#### set -g pane-border-status
#### set -g pane-border-format "\n [ ###P #T ] "
# Unbind the default prefix (Ctrl + B)
unbind C-b

# Set the new prefix to Ctrl + S
# bind-key C-s run-shell "~/dotfiles/tmux/update-status.sh"
set-option -g prefix C-s
# set -g allow-passthrough on
# set -ga update-environment TERM
# set -ga update-environment TERM_PROGRAM
# New window in same path
bind c new-window -c "#{pane_current_path}"
# Split panes with the current directory
bind % split-window -v -c "#{pane_current_path}"
bind '"' split-window -h -c "#{pane_current_path}"
# source the file to update config with prefix and r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded"
# Bind the new prefix key
# bind-key C-x send-prefix
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
# is_shell_program="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -vqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key "T" run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 80%,70% \
    --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --preview-window 'right:55%' \
    --preview 'sesh preview {}'
)\""
# set -ga terminal-overrides ',$TERM:Tc'
# set -as terminal-features ",$TERM:RGB"
# set -g default-terminal "${TERM}"
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin "janoamaral/tokyo-night-tmux"
# set -g @plugin 'joseburgosguntin/tokyo-dark-tmux'
# set -g @plugin 'tmux-plugins/tmux-powerline'
# set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'hendrikmi/tmux-cpu-mem-monitor'

# set -g @plugin 'catppuccin/tmux'
# set -g @catppuccin_flavour 'frappe'
# set -g @tokyo_flavour 'night'
# set -g @tokyo-night-tmux_window_id_style digital
# set -g @tokyo-night-tmux_pane_id_style hsquare
# set -g @tokyo-night-tmux_zoom_id_style dsquare
# set -g @tokyo-night-tmux_show_path 1
# set -g @tokyo-night-tmux_path_format relative # 'relative' or 'full'
# set -g @tokyo-night-tmux_show_netspeed 1
# set -g @tokyo-night-tmux_netspeed_iface "wlan0" # Detected via default route
# set -g @tokyo-night-tmux_netspeed_showip 1      # Display IPv4 address (default 0)
# set -g @tokyo-night-tmux_netspeed_refresh 1     # Update interval in seconds (default 1)
# set -g @tokyo-night-tmux_show_battery_widget 1
# set -g @tokyo-night-tmux_battery_name "BAT1"  # some linux distro have 'BAT0'
# set -g @tokyo-night-tmux_battery_low_threshold 21 # default
#set-option -g status-style bg=default
# set -g allow-passthrough on
#
# set -ga update-environment TERM
#
# set -ga update-environment TERM_PROGRAM
# set -g allow-passthrough on
#
# set -ga update-environment "TERM"
# set -ga update-environment "TERM_PROGRAM"
# set -ga update-environment TERM_PROGRAM
# Use vim arrow keys to resize
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5
# Start selecting text with "v"
bind-key -T copy-mode-vi 'v' send -X begin-selection
# Copy text with "y"
bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "wcopy"
# Resurrect
set -g @resurrect-capture-pane-contents 'on'

set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM
# set -g status-right "Ôíº CPU: #{cpu -i 3} | Óâ¶ MEM: #{mem} | Û±õü DISK: #{disk -f}"
source-file ~/dotfiles/tmux/mytheme.conf
set-hook -g pane-focus-in 'run-shell ~/dotfiles/tmux/auto-focus.sh'

# bind-key -n 'C-f' run-shell 'tmux neww "~/dotfiles/bash/custom-scripts/sessionize.sh; exit"'
run '~/.tmux/plugins/tpm/tpm'
